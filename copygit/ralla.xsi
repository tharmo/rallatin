class name=riimit
 gutspar
  pre
    xse:gawk in="guts.rel" : '''
    BEGIN {    PROCINFO["sorted_in"] = "@val_num_desc";tot=49399104 }
     { #if (NR>30000) exit; 
       if ($1!=p1) { 
          #n = asort(kumps,kumpa)
          res=p1 ":"
          x=0;
          #for (i in kumps) { res=res i "," kumps[i] ",";x++;if (x>5) break}
          for (i in kumps) { res=res i ",";x++;if (x>31) break}
          print res >"gut.spar"
          
          p1=$1
          delete(kumps)
         }
         kumps[$2]=$4 
         #print kumps[$2],$2
       }
    '''
 gutnorm 
     xse:gawk in="gutpairs.lst" : '''
     BEGIN {  while (getline<"guts.cnt") { counts[$1]=$2; tot=49399104} }
     { #if (NR>10000) exit; 
        toto=toto+$3
        expe=(counts[$1] * counts[$2]) /tot
        #Ff=($3*1482560)/(counts[$1]+1)
        #if ($1=="tulla") print $0, "," int(f) "," int((10*f)/counts[$2]) >"tulla.tst"
        #f=(10*f)/(counts[$2]+1) 
        f=($3) / (expe+1)
        if (f>1) print $0,  int(f*10) >"guts.rel"
        #print int(expe) "=" tot "/ (" counts 
     }
     END { print tot,toto} #49399104
    '''
 gutcount #jÃ¤i laskemata
   xse:gawk in="gutpairs.lst": '''
         { if ($1!=p) { print p,n >"guts.cnt";n=0;p=$1} 
          n=n+$3 } 
          
   '''

 sanaparitnorm
    ### xse:gawk in="sanaparit2.all" : '''
     BEGIN {  while (getline<"kaavoitetut") { i++;sanat[$1]=1; }}
     { #if (NR>30000) exit; 
      s1=(sanat[$2]) 
      s2=(sanat[$1]) 
      if (s1!=1 || s2!=1) next
      print  >"gramkarsi.lst"
      luvut[$1]=luvut[$1]+$3 
     }
     #END { for (i in luvut) print i,luvut[i]>"grams.cnt"}
    '''
   pre 
    xse:gawk in="gramkarsi.lst" : '''
     BEGIN {  while (getline<"grams.cnt") { counts[$1]=$2; } }
     { #if (NR>10000) exit; 
        tot=tot+$3
        f=($3*1482560)/(counts[$1])
        if ($1=="tulla") print $0, "," int(f) "," int((10*f)/counts[$2]) >"tulla.tst"
        f=(10*f)/counts[$2] 
        if (f>1) print $0, int(f) >"grams.rel"
     }
     END { print tot}
    '''
    # cat guts.srt  |uniq -c |gawk '{print $2,$3,$1}' >gutpairs.lst
 gutjoin    
    xse:gawk in="gutsents.iso" env="LC_ALL=C": '''
     BEGIN {  while (getline<"kaavoitetut") { i++;sanat[$1]=1; }}
     { 
      #if (NR>30000) exit; 
      if (length($0)<2)  {
        for (i in sent) {
          luvut[sent[i]]++ 
          for (j in sent)
            if (i!=j)        print  i,j  >"gutskarsi.sents"
        }  
        delete(sent);len=0
       }    
      if (sanat[$1]==1) { sent[$1]=1;len++; }
     }
     END { for (i in luvut) print i,luvut[i]>"guts.cnt"}
    '''
 zz  
    xse:gawk in="sanaparit2.all" : '''
     BEGIN {  while (getline<"kaavoitetut") { i++;sanat[$1]=1; }}
     { #if (NR>30000) exit; 
      s1=(sanat[$2]) 
      s2=(sanat[$1]) 
      if (s1!=1 || s2!=1) next
      print  >"gramkarsi.lst"
      luvut[$1]=luvut[$1]+$3 
     }
     END { for (i in luvut) print i,luvut[i]>"grams.cnt"}
    '''
 sanaparitjoin
    #xse:gawk in="sanaparit.all" : '''
    xse:gawk in="turha": '''
  
      {  gsub("_","",$0)
      if (p1!=$1) { print p1, nn> "sanaparit.cnt";nn=0}
       if (p1==$1 && p2==$2) np=np+$3  
      else { print p1,p2,np>"sanaparit2.all";np=0;}
      p1=$1;p2=$2;np=np+$3;nn=nn+$3
      }
    ''' 
 skumprev
   xse:gawk in="sanaparit.srt": '''
    /-/ { next}
    { if ($1==p1 && $2==p2) {  y=y+$3}
      else { 
      print p1,p2,y>"sanaparit12.lst";
      print p2,p1,y >"sanaparit21.lst"; 
      p1=$1;p2=$2;y=$3
      }
    }  
   '''
 skumpfreqs
  pre
   xse:gawk in="skumpkarsi.lst" : '''
    BEGIN { FS=",";}
    { n=0;
     for (i=3;i<NF;i=i+2) {
       n=n+$(i+1);ns[$i]=ns[$i]+$(i+1) 
     }
     print $1,$2,n, NF >"skumpfreq.lst";
     #if (NR>1000) exit
      }
    END { for (i in ns) print i,ns[i]>"skumpfreq2.lst"}  
   ''' 
 finnwn
   #cat ../finnwn/lists/fiwn-semrels-extra.tsv |gawk -F'\t' '{print $3}' |sort |uniq -c
   xse:gawk in="../finnwn/lists/fiwn-semrels-extra.tsv" : '''
    BEGIN { FS="\t";print "<ul>"}
     function list(st)    {    res=""; split(st,ss,"|"); 
      for (s in ss) {  
      gsub(/^[[:space:]]+|[[:space:]]+$/,"",ss[s]);
      if (match(ss[s],/[ -_><]/)<1)
       res=res "," ss[s];
            }
           return res
      }
     function short(st)    { 
        res=""; 
       split(st,ss," "); 
       return substr(ss[1],1,3) substr(ss[2],1,3) 
              }
    { res1=list($2);
     res2=list($5);  
     if (short($3)!="ATT") 
     print res1  res2 >"finwn.semrel"
     #if (NR>10) exit
      }
   ''' 
 synoall
   xse:gawk env="LC_ALL=C" in="finwn.syno" : '''
        BEGIN { FS="|"}
      { res=","
        hit=0
        for (i=2;i<=NF;i++) { 
          gsub(/^[[:space:]]+|[[:space:]]+$/,"",$i);
          if (NR<999) print $i i
          if ($i!="") 
            if (match($i,/[ -_><]/)<1) {  
             res=res $i ","
             hit++ 
           }
      }
          if (hit>1)   print res >"finwn.syno2"
      }
    '''
   #xse:shellexec: ./rallatin syno
 mis
  xmp
   xse:gawk in=wg2.cmd  out=wg3.cmd : '''
    #BEGIN { while (getline < "mis2.lst") { i++;s=substr($9,2,length($9)-6);mis[i]=s;};for (i in mis) print i,mis[i]; FS=" ";nmis=mis[i];i=1;} 
    BEGIN { while (getline < "mis2.lst") { i++;s=substr($9,2,length($9)-6);mis[i]=s;}; FS=" ";nmis=mis[1];i=1;print "XXX:",nmis} 
    {  if (NR==nmis) { print 
    i++; nmis=mis[i]   }
     }
   '''
   
 stypes
  xmp
   xse:gawk in=synsyn.htmi BEGIN="FS=',';ORS=''; OFS=','": '''
     /Synonyymit.fi::/ { 
       print "\n",sana ","> "synt_all.lst" 
       for (x in sanat) print "#"x,gensub("\r"," ","G",sanat[x])  >"synt_all.lst" #>"synt_" x ".lst";
       split($0,s," ");sana=tolower(s[3]);print sana "!!!!"
       delete(sanat)
       next
        }
     /Suomi Sanakirja/ { next} 
       // { 
       if (index($1,"  : !")==1) { typ=substr($1,6); $1=""} else $1=substr($1,6)
       sanat[typ]=sanat[typ]  $0
       
        }
       #print "*****[" $1"]***",$2;
       #/!first/ { o="first";$1=""; first=first $0}
       #/!sec/ { o="first";$1=""; sec=sec $0}
       #/!rel/ { o="rel";$1=""; rel=rel $0}
       #/!ant/ { o="ant";$1=""; ant=ant $0}
    #{  if (NR>100)  exit }
     
   '''
   
 ttt
   xse:from file="syno2/s55.html" xse:to=/test
     xse:copy
   xse:debug  
   # gawk ' NR>820 { print "wget --wait=1 https://www.synonyymit.fi/"$1" -O syno2/s" NR".html;sleep 1s"}' kaavoitetut.utf
 syno 
   xse:to file="synsyn.htmi"   
    li
     xse:apply xtimes=80 times=37090 counter=c
       xse:from file="syno2/s{$c}.html"
            xse:line: {$c} {head/title}::
            xse:debugtext xse:if="?eq(?mod($c,100),1)": {$c} 
            xse:apply select="#maindict/ul"
                  xse:line: !{@class},
                  xse:apply select=li 
                    xse:text: {@alltext()},
       :        
 aa   
     ###xmp
      xse:from file=turha.html xse:to=/turha
        xse:copy
     #xse:debug      
     ###xse:shellexec: cat kaavoitetut | iconv -f ISO-8859-1//TRANSLIT -t UTF-8 >kaavoitetut.utf
     #xse:gawk in=kaavoitetut.utf out=sanat.xml: ''' BEGIN { print "<ul>"} { print "<li>" $1 "</li>" }    END { print "<ul>"} '''
     ###xmp
       xse:from file="sanat.xml"
       ### #xse:to file="syno.cmd"
        ul 
         xse:apply maxtimes=2 select=li
           li: {?urlencode(.)} {.}
          #xse:line: wget --post-data=$(printf "url="; urlencode $u) https://www.synonyymit.fi/{$1}
 
     xse:from file="sanat.xml" 
      xse:apply select=li xmaxtimes=10
       xse:set sana={.}
       xse:to file="syno/{$sana}.xsi"
         xse:sleep time="{?random(2000,20000)}"         
        xse:from url="https://www.synonyymit.fi/{$sana}" 
          xse:copy         
 z        # xse:httpget url="https://www.synonyymit.fi/{$sana}" 
          #xse:to file="syno/{$sana}.xsi"
              ###d
               xse:apply select="//span"   
                  s: {@alltext()},{@class}
               xse:apply select="//ul"
                xse:element name={@class}
                 xse:apply select="li"
                  li: {@alltext()}  
     #xse:debug         https://www.synonyymit.fi/%C3%B6t%C3%B6kk%C3%A4
             
 x          li: {@.}_
 x    
    xse:apply select=".//ul"
     xse:copy 
  v   li: {@id}
      ul:  &nbsp: {@class}
        xse:apply select="li"
         li: xse:{@alltext()}
    

 sema
  # gawk -F, '{print $2,$8,$6}' klk.kokoko >../rallatin/sanaparit.lst
  # xse:shellexec: LC_ALL=C;sort sanaparit.lst >sanaparit.srt
  xmp
     xse:gawk in=sanaparit.srt: '''
     
       BEGIN { ORS=","}
       /\-/ { next}
       { if ($1!=prev1 ) {  print  prev2 "," np "\n===" tot "\n" $1  >"skumppanit.lst";prev1=$1;prev2=$2;np=0;tot=0 }
       else if ($2!=prev2 ) { print prev2 "," np>"skumppanit.lst"; prev2=$2;np=0}  
       np=np+$3
       tot=tot+$3
       #if (i>62000) exit;
       i++
       }
     '''

 adj
   # cat uuskaavas4.lst |gawk 'BEGIN {FS="," }{print $7 }' |./utfiin |./fiana|./ansiin |grep -a " A Pos Nom" >adj.ana
   pre
   xse:gawk in=adj.ana :  ''' BEGIN { FS="/"}
      /A Pos Nom Sg/ { s=substr($1,2);a=0;for (i=2;i<=NR;i++) if (index($i,"A Pos Nom Sg")>0 && index($i,s)>0) print s > "adj.all"}
      #/A Pos Nom Sg/ { a=0;for (i=2;i<=NR;i++) if (index($i,"A Pos Nom Sg")>0 && index($1) print substr($i,2) > "adj.all"}
      '''
   xse:shellexec: LC_ALL=C;sort adj.all >adj.srt
   xse:gawk in=uuskaavas4.lst :  ''' 
     BEGIN { while (getline s<"adj.srt")  adj[s]="A";      FS=",";print "*********************"       }
    {  print $0 "," adj[$7]>"uuskaavas5.lst"}
    ''' 
   xse:shellexec: LC_ALL=C;cat uuskaavas5.lst | gawk -F, '{ print $7 "," NR }' |sort >aakkos.lst
 promanual
   xse:from file="pron.html"
    ul
     xse:apply select="tr" xmaxtimes=25 xse:from="body/table/tbody"
       xse:if test="{?and(?ne(td[2]/b,'0 ilo'),?gt(td/@count(),2))}" 
        li xse:if="{?eq(td,'')}": {td}    
           #xse:if test="{?lt(?length(?trim(td[1])),2)}" 
           xse:apply select="td" counter="n=0"
            #em xseif="{?ne(*[1],'')}": {*[1]} {*[5]},
            ul 
              xse:if test="{?ne(.,'')}"
                li: <b>{.}  {*[3]}</b>
                 # xse:apply counter=n=0
                 #   em xse:if="{?ne(.,'')}": {@.}{$n}{.}, 
              xse:else
               li: <b>{b}:{*[5]}_</b>
               # xse:apply counter=n=0
               #   em xse:if="{?ne(.,'')}": {@.}{$n}{.}, 
 pronominit
   xse:shellexec: ./rallatin pronominit pronominit.tohfst
   #  xse:shellexec:  cat pronominit.tohfst |iconv -f ISO-8859-1//TRANSLIT -t UTF-8| ./figen| iconv -t ISO-8859-1//TRANSLIT -f UTF-8> pronominit.ana;cat pronominit.ana
   
 hae
  pre
    xse:shellexec: ./rallatin hae
 pron
  pre
    xse:shellexec: ./rallatin pronominit pronominit.tohfst
          #xse:shellexec:    cat prono.gen |iconv -t ISO-8859-1//TRANSLIT -f UTF-8| gawk -F'/' '{ for (i=2;i<=NR;i++) if (index($i,"Pron")>0) print $i>"pron.noms"}'
          #xse:shellexec:    cat prono.gen |iconv -t ISO-8859-1//TRANSLIT -f UTF-8| gawk -F'/' '{ for (i=2;i<=NR;i++) if (index($i,"Pron")>0) print $i}'
          #xse:shellexec:    cat prono.gen |iconv -t ISO-8859-1//TRANSLIT -f UTF-8
 aaa
  pre
   ###xse:gawk in=pron.ana BEGIN="FS='/'": '''
    {  for (p=2;p<=NR;p++)  if (index($p,"Pron")>0 && index($p,"Foc_")<1 && index($p," Px")<1) { # && index($p,"Qnt")>0  && index($p,"Indef")<1  ) 
      print $1 "," $p > "pron.tmp"
      #=split($p,ss," "); print s #for (i=2;i++;i<=4) print ss[i] 
     } 
   } 
  
   '''
  pre
      xse:gawk  env="LC_ALL=fi_FI.ISO-8859-1" in="pron.tmp" BEGIN="FS=' '": '''
       {
         #if (NR>100) exit  
         #$1="";$2=""
         sraja=index($1,",")
         lemma=substr($1,sraja+1,99)
         muoto=substr($1,2,sraja-2)
          gsub(/\$/,"",$0);
          r=""
          for (p=2;p<=NF;p++)  if (index(" Rel Dem Qnt Indef Refl Pron Pers Interr A ",$p)<1) r=r $p 
          #tokat[$3]=$p
            #print  $0 
          kaikki[r]=r
          print lemma "X" r "X" muoto > "pron2.tmp"   
          
        } 
      END {  #for (i in tokat) print i,tokat[i]
      for (i in kaikki) print i
      } 
     
     '''
    xse:shellexec: cat prons2.tmp |sort |uniq > pron3.tmp
    xse:gawk  env="LC_ALL=fi_FI.ISO-8859-1" in="pron3.tmp" BEGIN="FS='X'": '''
     {  if (f2==$2 && f1==$1) print $1 " " $2 " " f3 " " $3
      f1=$1;f2=$2;f3=$3
     } 
    '''

    
